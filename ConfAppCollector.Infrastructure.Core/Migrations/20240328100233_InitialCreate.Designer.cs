// <auto-generated />
using System;
using ConfAppCollector.Infrastructure.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ConfAppCollector.Infrastructure.Core.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240328100233_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ConfAppCollector.Domain.Entities.ConfApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("Author")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Outline")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ConfApplications");
                });

            modelBuilder.Entity("ConfAppCollector.Domain.Entities.Speaker", b =>
                {
                    b.Property<Guid>("Author")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Outline")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Author");

                    b.HasIndex("ApplicationId")
                        .IsUnique();

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("ConfAppCollector.Domain.Entities.Speaker", b =>
                {
                    b.HasOne("ConfAppCollector.Domain.Entities.ConfApplication", "Application")
                        .WithOne("Speaker")
                        .HasForeignKey("ConfAppCollector.Domain.Entities.Speaker", "ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("ConfAppCollector.Domain.Entities.ConfApplication", b =>
                {
                    b.Navigation("Speaker");
                });
#pragma warning restore 612, 618
        }
    }
}
